searchData={"items":[{"type":"module","title":"ja_erl_utils","doc":"Root module of the library. Nothing to see here.","ref":"ja_erl_utils.html"},{"type":"module","title":"ja_erl_utils_binint","doc":"Module for working with binary integers and bits.","ref":"ja_erl_utils_binint.html"},{"type":"function","title":"ja_erl_utils_binint.and_/2","doc":"Performs bitwise `and` operation on two binary integers.","ref":"ja_erl_utils_binint.html#and_/2"},{"type":"function","title":"ja_erl_utils_binint.bit_and/2","doc":"Performs `and` operation on two bits.\n\nIn addition to Erlang's `band` operator, it checks if parameters are bits.","ref":"ja_erl_utils_binint.html#bit_and/2"},{"type":"function","title":"ja_erl_utils_binint.bit_invert/1","doc":"Inverts a single bit.","ref":"ja_erl_utils_binint.html#bit_invert/1"},{"type":"function","title":"ja_erl_utils_binint.bit_or/2","doc":"Performs `or` operation on two bits.\n\nIn addition to Erlang's `bor` operator, it checks if parameters are bits.","ref":"ja_erl_utils_binint.html#bit_or/2"},{"type":"function","title":"ja_erl_utils_binint.bit_xor/2","doc":"Performs `xor` operation on two bits.\n\nIn addition to Erlang's `bxor` operator, it checks if parameters are bits.","ref":"ja_erl_utils_binint.html#bit_xor/2"},{"type":"function","title":"ja_erl_utils_binint.drop_insignificant_zeros/1","doc":"Drops insignificant 0s (the ones, that are in the most significant positions)\nof binary integer.","ref":"ja_erl_utils_binint.html#drop_insignificant_zeros/1"},{"type":"function","title":"ja_erl_utils_binint.from_integer/1","doc":"Returns binary representation of integer.","ref":"ja_erl_utils_binint.html#from_integer/1"},{"type":"function","title":"ja_erl_utils_binint.invert/1","doc":"Inverts bits of a binary integer.\n\nThe resulting binary integer might contain 0 as the most significant number.\nUse `drop_insignificant_zeros/1` to remove them.","ref":"ja_erl_utils_binint.html#invert/1"},{"type":"function","title":"ja_erl_utils_binint.or_/2","doc":"Performs bitwise `or` operation on two binary integers.","ref":"ja_erl_utils_binint.html#or_/2"},{"type":"function","title":"ja_erl_utils_binint.to_integer/1","doc":"Returns integer from its binary representation.","ref":"ja_erl_utils_binint.html#to_integer/1"},{"type":"function","title":"ja_erl_utils_binint.xor_/2","doc":"Performs bitwise `xor` operation on two binary integers.","ref":"ja_erl_utils_binint.html#xor_/2"},{"type":"type","title":"ja_erl_utils_binint.binint/0","doc":"Represents a binary integer number.\n\nThe list of bits starts with the least significant bit and ends with the\nmost significant one.","ref":"ja_erl_utils_binint.html#t:binint/0"},{"type":"type","title":"ja_erl_utils_binint.bit/0","doc":"Represents one bit.","ref":"ja_erl_utils_binint.html#t:bit/0"},{"type":"module","title":"ja_erl_utils_file","doc":"Module for functions that read information from file and write information to file.\nCurrently there are no write functions.\n\nIn [Advent of Code](https://adventofcode.com/) input data is provided in\nfiles, and there are some regularly occurring patterns of those files.\nThese functions try to help with reading them. Quite possibly, they will\nbe useful in other cases too.","ref":"ja_erl_utils_file.html"},{"type":"function","title":"ja_erl_utils_file.read_file/1","doc":"Reads the whole file `FileName` into a single string.","ref":"ja_erl_utils_file.html#read_file/1"},{"type":"function","title":"ja_erl_utils_file.read_line_groups/3","doc":"Reads file `FileName`, which consists of groups of lines, separated by line\n`Separator`. Each group of lines is converted to element in the resulting\nlist using function `GroupToElemFun`.\n\nThe `Elems` list is in reversed order compared to groups of lines in the\ninput file, which were used to make it. Function `GroupToElemFun` receives\nlines in `GroupOfLines` parameter in reversed order too. For motivation see\n`read_lines/1`.","ref":"ja_erl_utils_file.html#read_line_groups/3"},{"type":"function","title":"ja_erl_utils_file.read_line_groups_no_new_line/3","doc":"Same as `read_line_groups/3`, but the read lines are stripped of trailing\nnew line character before passing to `GroupToElemFun`.\n\nNote that `Separator` is still compared to the whole line, including\ntrailing new line character.","ref":"ja_erl_utils_file.html#read_line_groups_no_new_line/3"},{"type":"function","title":"ja_erl_utils_file.read_lines/1","doc":"Reads file `FileName` and returns the list of lines.\n\nThe `Lines` list is in reversed order compared to the input file. In some\ncases, there is no difference if the order of the lines is reversed, so\nthey can benefit from slightly better reading performance. In other cases\nfunction `lists:reverse/1` can be called explicitly on the result of this\nfunction.","ref":"ja_erl_utils_file.html#read_lines/1"},{"type":"function","title":"ja_erl_utils_file.read_lines_no_new_line/1","doc":"Reads file `FileName` and returns the list of lines without new line in the end.\n\nThe `Lines` list is in reversed order compared to the input file.\nFor motivation see `read_lines/1`.","ref":"ja_erl_utils_file.html#read_lines_no_new_line/1"},{"type":"function","title":"ja_erl_utils_file.read_lines_no_new_line_to_elems/2","doc":"Same as `read_lines_to_elems/2`, but the read line is stripped of trailing\nnew line character before passing to `LineToElemFun`.","ref":"ja_erl_utils_file.html#read_lines_no_new_line_to_elems/2"},{"type":"function","title":"ja_erl_utils_file.read_lines_no_new_line_to_elems/3","doc":"Same as `read_lines_to_elems/3`, but the read line is stripped of trailing\nnew line character before passing to any of `LineToElemFuns`.\n\nNote that `Separator` is still compared to the whole line, including\ntrailing new line character.","ref":"ja_erl_utils_file.html#read_lines_no_new_line_to_elems/3"},{"type":"function","title":"ja_erl_utils_file.read_lines_to_elems/2","doc":"Reads file `FileName` and converts each line to a single element in the\nresulting list, using `LineToElemFun` function.\n\nThe `Elems` list is in reversed order compared to the input file.\nFor motivation see `read_lines/1`.","ref":"ja_erl_utils_file.html#read_lines_to_elems/2"},{"type":"function","title":"ja_erl_utils_file.read_lines_to_elems/3","doc":"Reads file `FileName`, which consists of several parts, separated by line\n`Separator`, and converts each line in each part to a single element in the\nresulting list, using one of functions in `LineToElemFuns` list.\n\nLines in first part are converted using first function of `LineToElemFuns`\nlist, lines in second part - using second function of `LineToElemFuns`,\netc... The list of parts is returned. Each part is a list of elements in\nreversed order compared to lines of input file, which were used to make\nthem. For motivation see `read_lines/1`. However, the parts are in the same\norder as in the input file.","ref":"ja_erl_utils_file.html#read_lines_to_elems/3"},{"type":"function","title":"ja_erl_utils_file.read_only_line/1","doc":"Reads file `FileName` and returns the single line of the file.\n\nCrashes if the file contains more than one line.","ref":"ja_erl_utils_file.html#read_only_line/1"},{"type":"function","title":"ja_erl_utils_file.read_only_line_no_new_line/1","doc":"Reads file `FileName` and returns the single line of the file without new\nline in the end.\n\nCrashes if the file contains more than one line.","ref":"ja_erl_utils_file.html#read_only_line_no_new_line/1"},{"type":"module","title":"ja_erl_utils_int","doc":"Module for working with integer numbers.","ref":"ja_erl_utils_int.html"},{"type":"function","title":"ja_erl_utils_int.concat/2","doc":"Returns an integer, which results from concatenating second parameter to\nthe end of the first parameter\n    1> ja_erl_utils_int:concat(123, 456).\n    123456","ref":"ja_erl_utils_int.html#concat/2"},{"type":"function","title":"ja_erl_utils_int.digit_count/1","doc":"Returns the number of digits in non negative integer.\n\nTo obtain the result, this function uses `math:log10/1`, which returns a\nfloating point number. Converting floats to integers might cause errors due\nto loss of precision. To combat this, `math:log10/1` is applied only to\nsufficiently small numbers (less than `10^12`). Larger numbers are divided\n(using integer division, which is lossless), until they fit this interval.\n\nTODO: Try recursive solution with single digit step, accumulating the result:\n    fun(Int, Number, Power) when Int   Power;\n    fun(Int, Number, Power) _                 -> fun(Int, Number*10, Power+1).","ref":"ja_erl_utils_int.html#digit_count/1"},{"type":"function","title":"ja_erl_utils_int.euclidean_div/2","doc":"Calculates the quotient of Euclidean division `A/B`.\n\n>#### Euclidean division {: .info }\n>According to Euclid's division lemma, for any two integers `A` and `B`,\n>such that `B =/= 0`, there is a unique pair `Q` and `R` such that\n>`A = Q*B + R` and `0 = division and `R` is the remainder.\n\nFrom the lemma it follows that quotient is such integer, that gives the\nlargest product `Q*B`, which is still not greater than `A`. If `B` is\npositive, then quotient is the largest integer, which is still not greater\nthan the result of floating point division `A/B`. If `B` is negative, then\nquotient is the smallest integer, which is still not smaller than the\nresult of floating point division `A/B`. In some cases this result differs\nfrom the result of Erlang's `div` operator:\n    > ja_erl_utils_int:euclidean_div(-7, 3).\n    -3\n    2> -7 div 3.\n    -2\n    3> ja_erl_utils_int:euclidean_div(-7, -3).\n    3\n    4> -7 div -3.\n    2","ref":"ja_erl_utils_int.html#euclidean_div/2"},{"type":"function","title":"ja_erl_utils_int.euclidean_rem/2","doc":"Calculates the remainder of Euclidean division `A/B`.\n\nThe result is always a non negative integer, which is smaller than absolute\nvalue of `B`. In some cases it differs from the result of Erlang's `rem`\noperator:\n    1> ja_erl_utils_int:euclidean_rem(-7, 3).\n    2\n    2> -7 rem 3.\n    -1\n    3> ja_erl_utils_int:euclidean_rem(-7, -3).\n    2\n    4> -7 rem -3.\n    -1\n\nFor the definition of Euclidean division, see `euclidean_div/2`.","ref":"ja_erl_utils_int.html#euclidean_rem/2"},{"type":"function","title":"ja_erl_utils_int.solve_one_equation/1","doc":"Solves a single linear equation `A*x = B` for integer `x`.\n\nReturns a value of `x`, if it is the only integer solution of the equation.\nIf there are infinitely many integer solutions (`0*x = 0`), returns `any`.\nIf there are no integer solutions (`2*x = 3` or `0*x = 3`), returns `undefined`.\n    1> ja_erl_utils_int:solve_one_equation({2, -4}).\n    -2\n    2> ja_erl_utils_int:solve_one_equation({0, 0}).\n    any\n    3> ja_erl_utils_int:solve_one_equation({2, 3}).\n    undefined\n    4> ja_erl_utils_int:solve_one_equation({0, 3}).\n    undefined","ref":"ja_erl_utils_int.html#solve_one_equation/1"},{"type":"function","title":"ja_erl_utils_int.solve_two_equations/2","doc":"Solves system of two linear equations with two variables for integers.\n\nFor equation system\n    A1*x + B1*y = C1\n    A2*x + B2*y = C2\nreturns a tuple of `x` and `y` values, if it is the only solution. If there\nare infinitely many possible integer values for `x` or `y`, returns `any`\nin that position. If `y` is dependent on `x`, returns `{any, String}`,\nwhere `String` is an arithmetic expression, representing `y`'s dependency\non `x`. Note, that in such case `x` is not any integer, but any integer,\nwhich makes `y` value (`String` expression) integer. If the system has no\ninteger solutions, returns undefined.\n    1> ja_erl_utils_int:solve_two_equations({3, 4, 2}, {-2, 1, -5}).\n    {2,-1}\n    2> ja_erl_utils_int:solve_two_equations({0, 2, 4}, {0, -3, -6}).\n    {any,2}\n    3> ja_erl_utils_int:solve_two_equations({0, 0, 0}, {1, 0, -2}).\n    {-2,any}\n    4> ja_erl_utils_int:solve_two_equations({0, 0, 0}, {0, 0, 0}).\n    {any,any}\n    5> ja_erl_utils_int:solve_two_equations({1, 2, 3}, {-2, -4, -6}).\n    {any,\"(3 - 1*x)/2\"}\n    6> ja_erl_utils_int:solve_two_equations({1, -2, 3}, {-1, -3, -5}).\n    undefined","ref":"ja_erl_utils_int.html#solve_two_equations/2"},{"type":"function","title":"ja_erl_utils_int.split/2","doc":"Splits integer `Integer` into two integers, so that the second integer\ncontains `Split` last digits of the initial integer and the first integer\ncontains the rest digits.\n\n    > ja_erl_utils_int:split(12345, 2).\n    {123,45}\n\nReturns `undefined`, if `Integer` does not contain more digits than `Split`.","ref":"ja_erl_utils_int.html#split/2"},{"type":"function","title":"ja_erl_utils_int.ten_pow/1","doc":"Returns `Power`'th power of `10` (`10^Power`). This function differs from\n`math:pow/2` as it returns an integer.\n\nTo obtain the result, this function uses `math:pow/2`, which returns a\nfloating point number. Converting floats to integers might cause errors due\nto loss of precision. To combat this, `math:pow/2` is applied only to\nsufficiently small powers (less than `12`). Larger powers are calculated\nby multiplying (using integer multiplication, which is lossless) smaller\npower, that fit this interval, by `10^12` as many times as needed.\n\nImplementation, using string concatenation and transformation to integer\nwas also considered, but it appeared to be much slower:\n    erlang:list_to_integer(lists:append([\"1\"|lists:duplicate(Power, \"0\")]))\n\nTODO: Try recursive solution with single digit step, accumulating the result:\n    fun(0,     Number) -> Number;\n    fun(Power, Number) -> fun(Power-1, Number*10).","ref":"ja_erl_utils_int.html#ten_pow/1"},{"type":"module","title":"ja_erl_utils_list","doc":"Module for working with lists.","ref":"ja_erl_utils_list.html"},{"type":"function","title":"ja_erl_utils_list.count_elems_sorted/2","doc":"Counts number of elements `Elem` in sorted in ascending order list `List`.\n\nIn addition to the count, returns remaining list with all the `Elem`s and\nsmaller elements removed.","ref":"ja_erl_utils_list.html#count_elems_sorted/2"},{"type":"function","title":"ja_erl_utils_list.count_elems_start/1","doc":"Counts how many times starting element of list `List` is repeated at the\nstart of the list.\n\nIn addition to the count, returns remaining list with all the copies of\nstarting element removed from the start.","ref":"ja_erl_utils_list.html#count_elems_start/1"},{"type":"function","title":"ja_erl_utils_list.diagonals_b/1","doc":"Returns a list of all the backward diagonals (of direction `\\`) of a matrix\n`ListOfLists` represented as list of lists.\n\nDiagonals are returned starting from the bottom left corner and ending with\nthe top right corner. Moreover, each returned diagonal is reversed (from\nthe bottom right element to the top left one):\n    1> ja_erl_utils_list:diagonals_b([[1, 2],\n                                      [3, 4]]).\n    [[3],[4,1],[2]]\nThis function is defined only if each list in `ListOfLists` is of the same\nsize.\n\n>#### Consider that {: .info #diagonals_b_1_info}\n>This function was created before `m:ja_erl_utils_matrix`. It's aim was to\n>ease traversing diagonals of a matrix, which had to be represented as list\n>of lists. The function is probably not that useful now, as it is more\n>effective to walk through matrix diagonals by indexing elements in\n>`t:ja_erl_utils_matrix:matrix/1`.","ref":"ja_erl_utils_list.html#diagonals_b/1"},{"type":"function","title":"ja_erl_utils_list.diagonals_f/1","doc":"Returns a list of all the forward diagonals (of direction `/`) of matrix\n`ListOfLists` represented as list of lists.\n\nDiagonals are returned in reverse order (starting from the bottom right\ncorner and ending with the top left corner). Moreover, each returned\ndiagonal is reversed (from the bottom left element to the top right one):\n    1> ja_erl_utils_list:diagonals_f([[1, 2],\n                                      [3, 4]]).\n    [[4],[3,2],[1]]\nThis function is defined only if each list in `ListOfLists` is of the same\nsize.\n\nSee [information box](`m:ja_erl_utils_list#diagonals_b_1_info`) in the\ndocumentation of `diagonals_b/1`.","ref":"ja_erl_utils_list.html#diagonals_f/1"},{"type":"function","title":"ja_erl_utils_list.filter_count/2","doc":"Filters elements of list `List` using function (predicate) `Pred` and\ncounts the remaining elements.\n\nCalling it is equivalent to calling\n`erlang:length(lists:filter(Pred, List))`, except that `List` is traversed\nonly once.","ref":"ja_erl_utils_list.html#filter_count/2"},{"type":"function","title":"ja_erl_utils_list.filter_count_foldl/3","doc":"Combines `filter_count/2` and `lists:foldl/3`.\n\nCalling it is equivalent to calling:\n    {ListMapped, Acc1} = lists:mapfoldl(Fun, Acc0, List),\n    {erlang:length(lists:filter(fun(E) -> E end, ListMapped)), Acc1}.\nExcept that `List` is traversed only once.","ref":"ja_erl_utils_list.html#filter_count_foldl/3"},{"type":"function","title":"ja_erl_utils_list.foldl_pairs/3","doc":"Folds through every pair of different elements of list `List`.\n\nNo element is paired with itself and the order of elements of a pair is not\nimportant. If `List` is `[1,2,3,...,n]`, then the pairs are folded in\nfollowing order: `{1,2}, {1,3}, ..., {1,n}, {2,3}, ..., {2,n},...,\n{n-1,n}`.","ref":"ja_erl_utils_list.html#foldl_pairs/3"},{"type":"function","title":"ja_erl_utils_list.intersection/2","doc":"Finds the intersection of two lists `List1` and `List2`.\n\nThat is, it returns a list, containing those elements, which are in both\ngiven lists `List1` and `List2`.","ref":"ja_erl_utils_list.html#intersection/2"},{"type":"function","title":"ja_erl_utils_list.is_decreasing/1","doc":"Checks if list `List` is in decreasing (non-increasing) order.\n\nEvery element of the list must be smaller or equal to the previous one.","ref":"ja_erl_utils_list.html#is_decreasing/1"},{"type":"function","title":"ja_erl_utils_list.is_decreasing/2","doc":"Checks if list `List` is in decreasing (non-increasing) order with\nconsecutive elements not further apart than `Diff`.\n\nEvery element of the list must be smaller than previous element by\nnot more than `Diff` or equal to it.","ref":"ja_erl_utils_list.html#is_decreasing/2"},{"type":"function","title":"ja_erl_utils_list.is_increasing/1","doc":"Checks if list `List` is in increasing (non-decreasing) order.\n\nEvery element of the list must be larger or equal to the previous one.","ref":"ja_erl_utils_list.html#is_increasing/1"},{"type":"function","title":"ja_erl_utils_list.is_increasing/2","doc":"Checks if list `List` is in increasing (non-decreasing) order with\nconsecutive elements not further apart than `Diff`.\n\nEvery element of the list must be larger than previous element by\nnot more than `Diff` or equal to it.","ref":"ja_erl_utils_list.html#is_increasing/2"},{"type":"function","title":"ja_erl_utils_list.is_monotonic/2","doc":"Checks if list `List` is monotonic according to `Fun`.\n\nChecks if for every pair of consecutive elements `Prev` and `Next` call to\n`Fun(Prev, Next)` returns true.","ref":"ja_erl_utils_list.html#is_monotonic/2"},{"type":"function","title":"ja_erl_utils_list.is_steady/2","doc":"Checks if consecutive elements of list `List` are not further apart than\n`Diff`.","ref":"ja_erl_utils_list.html#is_steady/2"},{"type":"function","title":"ja_erl_utils_list.is_strictly_decreasing/1","doc":"Checks if list `List` is in strictly decreasing (descending) order.\n\nEvery element of the list must be strictly smaller than the previous one.","ref":"ja_erl_utils_list.html#is_strictly_decreasing/1"},{"type":"function","title":"ja_erl_utils_list.is_strictly_decreasing/2","doc":"Checks if list `List` is in strictly decreasing (descending) order with\nconsecutive elements not further apart than `Diff`.\n\nEvery element of the list must be strictly smaller than previous element by\nnot more than `Diff`.","ref":"ja_erl_utils_list.html#is_strictly_decreasing/2"},{"type":"function","title":"ja_erl_utils_list.is_strictly_increasing/1","doc":"Checks if list `List` is in strictly increasing (ascending) order.\n\nEvery element of the list must be strictly larger than the previous one.","ref":"ja_erl_utils_list.html#is_strictly_increasing/1"},{"type":"function","title":"ja_erl_utils_list.is_strictly_increasing/2","doc":"Checks if list `List` is in strictly increasing (ascending) order with\nconsecutive elements not further apart than `Diff`.\n\nEvery element of the list must be strictly larger than previous element by\nnot more than `Diff`.","ref":"ja_erl_utils_list.html#is_strictly_increasing/2"},{"type":"function","title":"ja_erl_utils_list.map_sum/2","doc":"Maps every element of list `List` to a number using function `Fun` and adds\nthose numbers.\n\nCalling it is equivalent to calling `lists:sum(lists:map(Fun, List))`,\nexcept that `List` is traversed only once.","ref":"ja_erl_utils_list.html#map_sum/2"},{"type":"function","title":"ja_erl_utils_list.map_sum_foldl/3","doc":"Combines `map_sum/2` and `lists:foldl/3`.\n\nCalling it is equivalent to calling:\n    {ListMapped, Acc1} = lists:mapfoldl(Fun, Acc0, List),\n    {lists:sum(ListMapped), Acc1}.\nExcept that `List` is traversed only once.","ref":"ja_erl_utils_list.html#map_sum_foldl/3"},{"type":"function","title":"ja_erl_utils_list.middle/1","doc":"Returns the middle element(s) of the list `List`.\n\nIf the list contains odd number of elements, the returned list contains a\nsingle middle element. If however it contains even number of elements, two\nelements next to the middle of `List` is returned.","ref":"ja_erl_utils_list.html#middle/1"},{"type":"function","title":"ja_erl_utils_list.middle_single/1","doc":"Returns the single middle element of the list `List`.\n\nThis function is designed for lists, containing odd number of elements. If\n`List` contains even number of elements, this function crashes.","ref":"ja_erl_utils_list.html#middle_single/1"},{"type":"function","title":"ja_erl_utils_list.transpose/1","doc":"Transposes a matrix `ListOfLists` represented as list of lists.\n\nTransposition is flipping matrix over its diagonal:\n    1> ja_erl_utils_list:transpose([[1, 2],\n                                    [3, 4]]).\n    [[1,3],[2,4]]\nThis function is defined only if each list in `ListOfLists` is of the same\nsize.","ref":"ja_erl_utils_list.html#transpose/1"},{"type":"module","title":"ja_erl_utils_map","doc":null,"ref":"ja_erl_utils_map.html"},{"type":"function","title":"ja_erl_utils_map.map_map_count/2","doc":null,"ref":"ja_erl_utils_map.html#map_map_count/2"},{"type":"function","title":"ja_erl_utils_map.map_map_sum/2","doc":null,"ref":"ja_erl_utils_map.html#map_map_sum/2"},{"type":"function","title":"ja_erl_utils_map.map_max_value/1","doc":null,"ref":"ja_erl_utils_map.html#map_max_value/1"},{"type":"function","title":"ja_erl_utils_map.map_min_value/1","doc":null,"ref":"ja_erl_utils_map.html#map_min_value/1"},{"type":"function","title":"ja_erl_utils_map.map_reverse/1","doc":null,"ref":"ja_erl_utils_map.html#map_reverse/1"},{"type":"module","title":"ja_erl_utils_matrix","doc":null,"ref":"ja_erl_utils_matrix.html"},{"type":"function","title":"ja_erl_utils_matrix.direction_all/0","doc":null,"ref":"ja_erl_utils_matrix.html#direction_all/0"},{"type":"function","title":"ja_erl_utils_matrix.direction_clockwise/1","doc":null,"ref":"ja_erl_utils_matrix.html#direction_clockwise/1"},{"type":"function","title":"ja_erl_utils_matrix.direction_counterclockwise/1","doc":null,"ref":"ja_erl_utils_matrix.html#direction_counterclockwise/1"},{"type":"function","title":"ja_erl_utils_matrix.direction_reverse/1","doc":null,"ref":"ja_erl_utils_matrix.html#direction_reverse/1"},{"type":"function","title":"ja_erl_utils_matrix.get_char_matrix/1","doc":null,"ref":"ja_erl_utils_matrix.html#get_char_matrix/1"},{"type":"function","title":"ja_erl_utils_matrix.get_new_matrix/2","doc":null,"ref":"ja_erl_utils_matrix.html#get_new_matrix/2"},{"type":"function","title":"ja_erl_utils_matrix.matrix_foldl/4","doc":null,"ref":"ja_erl_utils_matrix.html#matrix_foldl/4"},{"type":"function","title":"ja_erl_utils_matrix.matrix_index_of/2","doc":null,"ref":"ja_erl_utils_matrix.html#matrix_index_of/2"},{"type":"function","title":"ja_erl_utils_matrix.matrix_is_valid_index/2","doc":null,"ref":"ja_erl_utils_matrix.html#matrix_is_valid_index/2"},{"type":"function","title":"ja_erl_utils_matrix.matrix_next_index/3","doc":null,"ref":"ja_erl_utils_matrix.html#matrix_next_index/3"},{"type":"function","title":"ja_erl_utils_matrix.print_char_matrix/2","doc":null,"ref":"ja_erl_utils_matrix.html#print_char_matrix/2"},{"type":"opaque","title":"ja_erl_utils_matrix.matrix/1","doc":null,"ref":"ja_erl_utils_matrix.html#t:matrix/1"},{"type":"type","title":"ja_erl_utils_matrix.matrix_direction/0","doc":null,"ref":"ja_erl_utils_matrix.html#t:matrix_direction/0"},{"type":"type","title":"ja_erl_utils_matrix.matrix_index/0","doc":null,"ref":"ja_erl_utils_matrix.html#t:matrix_index/0"},{"type":"module","title":"ja_erl_utils_string","doc":null,"ref":"ja_erl_utils_string.html"},{"type":"function","title":"ja_erl_utils_string.drop_trailing_new_line/1","doc":null,"ref":"ja_erl_utils_string.html#drop_trailing_new_line/1"},{"type":"function","title":"ja_erl_utils_string.get_integer/1","doc":null,"ref":"ja_erl_utils_string.html#get_integer/1"},{"type":"function","title":"ja_erl_utils_string.get_integer_list/1","doc":null,"ref":"ja_erl_utils_string.html#get_integer_list/1"},{"type":"function","title":"ja_erl_utils_string.get_integer_list/2","doc":null,"ref":"ja_erl_utils_string.html#get_integer_list/2"},{"type":"module","title":"ja_erl_utils_terminal","doc":"Module for terminal input and output functions.\n\nThis module is probably most useful while the application is being developed.\nIt expects that standard input and output device of the program is a terminal,\nwhich usually is the case.\nThese functions allow to interfere normal program execution in order to obtain\ninformation useful for debugging.","ref":"ja_erl_utils_terminal.html"},{"type":"function","title":"ja_erl_utils_terminal.print/1","doc":"Outputs message to the terminal.\n\nAppends a newline character to the end of the message.","ref":"ja_erl_utils_terminal.html#print/1"},{"type":"function","title":"ja_erl_utils_terminal.print/2","doc":"Outputs parametrised message to the terminal.\n\nAppends a newline character to the end of the message.\n`Format` variable provides message format and `Params` provides the values for the parameters.\nFor more information see `io:fwrite/3`.","ref":"ja_erl_utils_terminal.html#print/2"},{"type":"function","title":"ja_erl_utils_terminal.wait_key_press/0","doc":"Stops execution of the program, until `Enter` key is pressed.","ref":"ja_erl_utils_terminal.html#wait_key_press/0"},{"type":"extras","title":"Overview","doc":"# My Erlang utilities\n\nThis is an OTP library, containing various utility functions for Erlang.\nIt consists of some functions, which should ease code development.\nThe functions are grouped into modules by their domains. These modules are available:\n* `m:ja_erl_utils_binint` contains functions for working with binary integers.\n* `m:ja_erl_utils_file` contains functions for reading and writing files.\n* `m:ja_erl_utils_int` contains functions for working integer numbers.\n* `m:ja_erl_utils_list` contains functions for working with lists.\n* `m:ja_erl_utils_map` contains functions for working with Erlang maps.\n* `m:ja_erl_utils_matrix` contains functions for working with two dimensional arrays (matrices).\n* `m:ja_erl_utils_string` contains functions for working with strings as well as parsing them.\n* `m:ja_erl_utils_terminal` contains functions for working with output and input from the terminal.\n\nYou can read documentation committed to the repository [here](https://rawcdn.githack.com/Juliusan/ja_erl_utils/master/doc/index.html).\n\nThis library is heavily influenced by the needs, which arose while solving [Advent of Code](https://adventofcode.com/) tasks.\nIf you want to check out my solutions or at least some of them, you can visit [my Advent of Code repository](https://github.com/Juliusan/adventofcode).\nThe `ja_erl_utils` library was created after Advent of Code 2024.","ref":"readme.html"},{"type":"extras","title":"Using source code - Overview","doc":"The library uses `make` to do its regular tasks.\n\nTo build `ja_erl_utils` use:\n    $ make compile\n\nTo run all the unit tests use:\n    $ make test\n\nIt is possible to run only some unit tests:\n    $ make test EUNIT_ARGS=\"--module=ja_erl_utils_int_tests\"\n    $ make test EUNIT_ARGS=\"--generator=ja_erl_utils_int_tests:solve_two_equations_int_test_\"\n\nFor more details, see `rebar3` [documentation](https://rebar3.org/docs/commands/#eunit).\n\nTo generate documentation use:\n    $ make docs\n\nTo try out the functions in console use:\n    $ make run","ref":"readme.html#using-source-code"},{"type":"extras","title":"License","doc":"# Apache License\nVersion 2.0, January 2004\n\nhttp://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION","ref":"license.html"},{"type":"extras","title":"1. Definitions. - License","doc":"\"License\" shall mean the terms and conditions for use, reproduction, and\ndistribution as defined by Sections 1 through 9 of this document.\n\n\"Licensor\" shall mean the copyright owner or entity authorized by the copyright\nowner that is granting the License.\n\n\"Legal Entity\" shall mean the union of the acting entity and all other entities\nthat control, are controlled by, or are under common control with that entity.\nFor the purposes of this definition, \"control\" means (i) the power, direct or\nindirect, to cause the direction or management of such entity, whether by\ncontract or otherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\n\"You\" (or \"Your\") shall mean an individual or Legal Entity exercising\npermissions granted by this License.\n\n\"Source\" form shall mean the preferred form for making modifications, including\nbut not limited to software source code, documentation source, and configuration\nfiles.\n\n\"Object\" form shall mean any form resulting from mechanical transformation or\ntranslation of a Source form, including but not limited to compiled object code,\ngenerated documentation, and conversions to other media types.\n\n\"Work\" shall mean the work of authorship, whether in Source or Object form, made\navailable under the License, as indicated by a copyright notice that is included\nin or attached to the work (an example is provided in the Appendix below).\n\n\"Derivative Works\" shall mean any work, whether in Source or Object form, that\nis based on (or derived from) the Work and for which the editorial revisions,\nannotations, elaborations, or other modifications represent, as a whole, an\noriginal work of authorship. For the purposes of this License, Derivative Works\nshall not include works that remain separable from, or merely link (or bind by\nname) to the interfaces of, the Work and Derivative Works thereof.\n\n\"Contribution\" shall mean any work of authorship, including the original version\nof the Work and any modifications or additions to that Work or Derivative Works\nthereof, that is intentionally submitted to Licensor for inclusion in the Work\nby the copyright owner or by an individual or Legal Entity authorized to submit\non behalf of the copyright owner. For the purposes of this definition,\n\"submitted\" means any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems, and\nissue tracking systems that are managed by, or on behalf of, the Licensor for\nthe purpose of discussing and improving the Work, but excluding communication\nthat is conspicuously marked or otherwise designated in writing by the copyright\nowner as \"Not a Contribution.\"\n\n\"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf\nof whom a Contribution has been received by Licensor and subsequently\nincorporated within the Work.","ref":"license.html#1-definitions"},{"type":"extras","title":"2. Grant of Copyright License. - License","doc":"Subject to the terms and conditions of this License, each Contributor hereby\ngrants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,\nirrevocable copyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the Work and such\nDerivative Works in Source or Object form.","ref":"license.html#2-grant-of-copyright-license"},{"type":"extras","title":"3. Grant of Patent License. - License","doc":"Subject to the terms and conditions of this License, each Contributor hereby\ngrants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,\nirrevocable (except as stated in this section) patent license to make, have\nmade, use, offer to sell, sell, import, and otherwise transfer the Work, where\nsuch license applies only to those patent claims licensable by such Contributor\nthat are necessarily infringed by their Contribution(s) alone or by combination\nof their Contribution(s) with the Work to which such Contribution(s) was\nsubmitted. If You institute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work or a\nContribution incorporated within the Work constitutes direct or contributory\npatent infringement, then any patent licenses granted to You under this License\nfor that Work shall terminate as of the date such litigation is filed.","ref":"license.html#3-grant-of-patent-license"},{"type":"extras","title":"4. Redistribution. - License","doc":"You may reproduce and distribute copies of the Work or Derivative Works thereof\nin any medium, with or without modifications, and in Source or Object form,\nprovided that You meet the following conditions:\n\n1. You must give any other recipients of the Work or Derivative Works a copy of\n   this License; and\n\n2. You must cause any modified files to carry prominent notices stating that\n   You changed the files; and\n\n3. You must retain, in the Source form of any Derivative Works that You\n   distribute, all copyright, patent, trademark, and attribution notices from\n   the Source form of the Work, excluding those notices that do not pertain to\n   any part of the Derivative Works; and\n\n4. If the Work includes a \"NOTICE\" text file as part of its distribution, then\n   any Derivative Works that You distribute must include a readable copy of the\n   attribution notices contained within such NOTICE file, excluding those\n   notices that do not pertain to any part of the Derivative Works, in at least\n   one of the following places: within a NOTICE text file distributed as part\n   of the Derivative Works; within the Source form or documentation, if\n   provided along with the Derivative Works; or, within a display generated by\n   the Derivative Works, if and wherever such third-party notices normally\n   appear. The contents of the NOTICE file are for informational purposes only\n   and do not modify the License. You may add Your own attribution notices\n   within Derivative Works that You distribute, alongside or as an addendum to\n   the NOTICE text from the Work, provided that such additional attribution\n   notices cannot be construed as modifying the License.\n\nYou may add Your own copyright statement to Your modifications and may provide\nadditional or different license terms and conditions for use, reproduction, or\ndistribution of Your modifications, or for any such Derivative Works as a whole,\nprovided Your use, reproduction, and distribution of the Work otherwise complies\nwith the conditions stated in this License.","ref":"license.html#4-redistribution"},{"type":"extras","title":"5. Submission of Contributions. - License","doc":"Unless You explicitly state otherwise, any Contribution intentionally submitted\nfor inclusion in the Work by You to the Licensor shall be under the terms and\nconditions of this License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify the terms of\nany separate license agreement you may have executed with Licensor regarding\nsuch Contributions.","ref":"license.html#5-submission-of-contributions"},{"type":"extras","title":"6. Trademarks. - License","doc":"This License does not grant permission to use the trade names, trademarks,\nservice marks, or product names of the Licensor, except as required for\nreasonable and customary use in describing the origin of the Work and\nreproducing the content of the NOTICE file.","ref":"license.html#6-trademarks"},{"type":"extras","title":"7. Disclaimer of Warranty. - License","doc":"Unless required by applicable law or agreed to in writing, Licensor provides the\nWork (and each Contributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,\nincluding, without limitation, any warranties or conditions of TITLE, NON-\nINFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are\nsolely responsible for determining the appropriateness of using or\nredistributing the Work and assume any risks associated with Your exercise of\npermissions under this License.","ref":"license.html#7-disclaimer-of-warranty"},{"type":"extras","title":"8. Limitation of Liability. - License","doc":"In no event and under no legal theory, whether in tort (including negligence),\ncontract, or otherwise, unless required by applicable law (such as deliberate\nand grossly negligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special, incidental,\nor consequential damages of any character arising as a result of this License or\nout of the use or inability to use the Work (including but not limited to\ndamages for loss of goodwill, work stoppage, computer failure or malfunction, or\nany and all other commercial damages or losses), even if such Contributor has\nbeen advised of the possibility of such damages.","ref":"license.html#8-limitation-of-liability"},{"type":"extras","title":"9. Accepting Warranty or Additional Liability. - License","doc":"While redistributing the Work or Derivative Works thereof, You may choose to\noffer, and charge a fee for, acceptance of support, warranty, indemnity, or\nother liability obligations and/or rights consistent with this License. However,\nin accepting such obligations, You may act only on Your own behalf and on Your\nsole responsibility, not on behalf of any other Contributor, and only if You\nagree to indemnify, defend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason of your\naccepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS","ref":"license.html#9-accepting-warranty-or-additional-liability"}],"proglang":"erlang","content_type":"text/markdown","producer":{"name":"ex_doc","version":"0.35.1"}}